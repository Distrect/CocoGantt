generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Project {
  projectID     Int            @id @default(autoincrement())
  projectName   String?        @default("New Project")
  createdAt     DateTime?      @default(now())
  updatedAt     DateTime       @updatedAt
  functionPoint Functionpoint?
  cocomo        Cocomo?
  teamMembers   TeamMember[]
  tasks         Task[]
}

model Task {
  taskID    Int      @id @default(autoincrement())
  taskName  String
  startDate DateTime
  endDate   DateTime
  duration  Int
  progress  Int

  optimisticTime     Int
  mostLikelyTime     Int
  pessimisticTime    Int
  successProbability Int
  crashDay           Int
  crashCost          Int
  normalCost         Int

  parentID    Int
  level       Int
  index       Int
  predecessor String
  isMileStone Boolean
  isManual    Boolean

  project          Project? @relation(fields: [foreignProjectID], references: [projectID])
  foreignProjectID Int?     @unique()
}

model Functionpoint {
  fpID             Int      @id @default(autoincrement())
  attributes       String   @default("{}")
  caf              String   @default("{}")
  project          Project? @relation(fields: [foreignProjectID], references: [projectID])
  foreignProjectID Int?     @unique()
}

model Cocomo {
  cocomoID         Int      @id @default(autoincrement())
  mode             String
  kloc             Int
  project          Project? @relation(fields: [foreignProjectID], references: [projectID])
  foreignProjectID Int?     @unique()
}

model TeamMember {
  teamID           Int      @id @default(autoincrement())
  memberName       String
  title            String
  project          Project? @relation(fields: [foreignProjectID], references: [projectID])
  foreignProjectID Int?     @unique()
}
